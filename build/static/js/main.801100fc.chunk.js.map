{"version":3,"sources":["components/button.jsx","components/board.jsx","App.js","index.js"],"names":["Button","className","onClick","props","this","value","Component","Board","state","width","squares","Array","fill","widths","player","winner","i","setState","number","lines","horizontals","push","length","chunk","splice","verticals","j","row","printing","forEach","line","item","console","log","includes","calculateWinner","nextturn","updateArray","map","square","index","handleClick","key","App","Fragment","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.801100fc.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass Button extends Component {\n  render () {\n    return (\n      <button className=\"square\" onClick={() => this.props.onClick()}>\n        {this.props.value}\n      </button>\n    );\n  }\n}\n\nexport default Button;\n","import React, { Component } from \"react\";\nimport Button from \"./button\";\n\nclass Board extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      width: 3,\n      squares: Array(9).fill(null),\n      widths: [3,4,6,10],\n      player: \"X\",\n      winner: \"\"\n    };\n  }\n  handleClick(i) {\n    const squares = this.state.squares;\n    if (squares[i] === null) {\n      squares[i] = this.state.player;\n      this.setState({squares});\n      var player = this.state.player;\n      player === \"X\" ? player = \"O\" : player = \"X\"\n      this.setState({player});\n    }\n  }\n  updateArray(number) {\n    const squares = Array(number * number).fill(null)\n    this.setState({squares});\n    this.setState({ width:number });\n  }\n\n  calculateWinner() {\n    const squares = this.state.squares;\n    const lines = [];\n\n    //VERTICAL\n    var width = this.state.width;\n    var horizontals = [];\n    for (var i, i = 0; i < (width*width); i++) {\n      horizontals.push(i);\n    }\n    var chunk\n    while (horizontals.length > 0) {\n      chunk = horizontals.splice(0,width)\n      lines.push(chunk)\n    }\n\n    var verticals = [];\n    for (var i, i = 0; i < width; i++) {\n      for (var j, j = i; j < (width*width); j+=(width)) {\n        verticals.push(j);\n      }\n    }\n    var chunk\n    while (verticals.length > 0) {\n      chunk = verticals.splice(0,width)\n      lines.push(chunk)\n    }\n\n\n    //DIAGONALS\n    var diagonals = [];\n    var row = 3\n\n    // here we only want top right\n    for (var i, i = (row - 1); i < width; i++) {\n      for (var j, j = i; j < (width*width); j+=(width-1)) {\n      }\n    }\n\n    // top left\n    for (var i, i = 0; i < (width - row + 1); i++) {\n      for (var j, j = i; j < (width*width); j+=(width+1)) {\n      }\n    }\n\n\n    var printing = \"\";\n\n    lines.forEach(function(line) {\n      printing = printing + \"-\";\n      line.forEach(function(item) {\n        if (squares[item] !== null) {\n          printing = printing + squares[item];\n        }\n      });\n    })\n    var winner = \"\";\n    console.log(printing)\n\n    if (printing.includes(\"XXX\")) {\n      return winner = \"X made 3!\";\n      console.log(winner)\n    }\n    if (printing.includes(\"XXXX\")) {\n      return winner = \"X made 4!\";\n    }\n    if (printing.includes(\"XXXXX\")) {\n      return winner = \"X made 5!\";\n    }\n    if (printing.includes(\"OOO\")) {\n      return winner = \"O made 3!\";\n    }\n    if (printing.includes(\"OOOO\")) {\n      return winner = \"O made 4!\";\n      console.log(winner)\n    }\n    if (printing.includes(\"OOOOO\")) {\n      return winner = \"O made 5!\";\n    }\n  }\n\n  render () {\n    var winner = this.calculateWinner();\n    let nextturn = 'Next player: ' + this.state.player;\n    return(\n      <div>\n        <button onClick={() => this.updateArray(3)}>New Game</button>\n\n        {this.state.widths.map(width =>\n          <p onClick={() => this.updateArray(width)}>play {width}x{width}</p>\n        )}\n\n        <div className=\"status\">{nextturn}</div>\n        <div className=\"status\">{winner}</div>\n        <div className={`board-container width-${this.state.width}`}>\n          {this.state.squares.map((square,index) =>\n            <Button\n              onClick={() => this.handleClick(index)}\n              value={this.state.squares[index]}\n              key={index}\n            />\n          )}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Board;\n","import React, { Component } from \"react\";\nimport Board from \"./components/board\";\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <Board/>\n          <div className=\"game-info\">\n            <div>{/* status */}</div>\n            <ol>{/* TODO */}</ol>\n          </div>\n      </React.Fragment>\n    );\n  };\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}