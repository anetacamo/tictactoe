{"version":3,"sources":["components/button.jsx","components/board.jsx","App.js","index.js"],"names":["Button","onClick","value","className","Board","useState","width","setWidth","player","setPlayer","squares","setSquares","widths","winner","setWinner","useEffect","fields","Array","fill","calculateWinner","chunk","i","j","makeLines","direction","length","splice","lines","push","squared","horizontals","printing","forEach","line","l","includes","map","key","square","index","handleClick","App","Fragment","Component","ReactDOM","render","document","getElementById"],"mappings":"oOAQeA,EANA,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,MAAZ,OACb,yBAAKC,UAAU,SAASF,QAAS,kBAAMA,MACrC,2BAAIC,KCkHOE,EAlHD,WAAO,IAAD,EACQC,mBAAS,GADjB,mBACXC,EADW,KACJC,EADI,OAEUF,mBAAS,KAFnB,mBAEXG,EAFW,KAEHC,EAFG,OAGYJ,mBAAS,IAHrB,mBAGXK,EAHW,KAGFC,EAHE,OAIUN,mBAAS,CAAC,EAAG,EAAG,EAAG,GAAI,KAJjC,mBAIXO,EAJW,aAKUP,mBAAS,KALnB,mBAKXQ,EALW,KAKHC,EALG,KAOlBC,qBAAU,WACR,IAAMC,EAASC,MAAMX,EAAQA,GAAOY,KAAK,MACzCP,EAAWK,GACXF,EAAU,MACT,CAACR,IAEJ,IAWMa,EAAkB,WACtB,IAQIC,EACAC,EACAC,EAVEC,EAAY,SAACC,GACjB,KAAOA,EAAUC,OAAS,GACxBL,EAAQI,EAAUE,OAAO,EAAGpB,GAC5BqB,EAAMC,KAAKR,IAITO,EAAQ,GAIVE,EAAUvB,EAAQA,EAAQ,EAC1BwB,EAAc,GAGlB,IAAKT,EAAI,EAAGA,EAAIQ,EAASR,IACvBS,EAAYF,KAAKP,GAKnB,IAHAE,EAAUO,GAGLT,EAAI,EAAGA,EAAIf,EAAQ,EAAGe,IACzB,IAAKC,EAAID,EAAGC,EAAIO,EAASP,GAAKhB,EAC5BwB,EAAYF,KAAKN,GAMrB,IAHAC,EAAUO,GAGLT,EAAI,EAAGA,EAAIf,EAAQ,EAAGe,IACzB,IAAKC,EAAID,EAAGC,EAAID,EAAIf,EAAQ,EAAGgB,GAAKhB,EAAQ,EAC1CwB,EAAYF,KAAKN,GAGrB,IAAKD,EAAI,EAAGA,EAAIf,EAAQ,EAAGe,IACzBD,EAAQU,EAAYJ,OAAO,EAAGL,GAC9BM,EAAMC,KAAKR,GAIb,IAAKC,EAAI,EAAGA,EAAIf,EAAQ,EAAGe,IACzB,IAAKC,EAAID,EAAGC,EAAIO,GAAWvB,EAAQe,EAAIf,GAAQgB,GAAKhB,EAAQ,EAC1DwB,EAAYF,KAAKN,GAGrB,IAAKD,EAAIf,EAAOe,EAAI,EAAGA,IACrBD,EAAQU,EAAYJ,OAAO,EAAGL,GAC9BM,EAAMC,KAAKR,GAGb,IAAIW,EAAW,GACfJ,EAAMK,SAAQ,SAACC,GACbA,EAAKD,SAAQ,SAACE,GAAD,OAAQH,GAAsBrB,EAAQwB,EAAI,MACvDH,GAAsB,OAGpBA,EAASI,SAAS,QACpBrB,EAAU,WAERiB,EAASI,SAAS,QACpBrB,EAAU,YAId,OACE,6BACE,yBAAKX,UAAU,eAAeF,QAAS,kBAAMM,EAAS,KAAtD,YAGCK,EAAOwB,KAAI,SAAC9B,GAAD,OACV,uBAAG+B,IAAK/B,EAAOL,QAAS,kBAAMM,EAASD,IAAQH,UAAU,UAAzD,QACQG,EADR,IACgBA,MAGlB,yBAAKH,UAAU,UAAf,eAAqCK,GACrC,yBAAKL,UAAU,UAAUU,GACzB,yBAAKV,UAAS,gCAA2BG,IACtCI,EAAQ0B,KAAI,SAACE,EAAQC,GAAT,OACX,kBAAC,EAAD,CACErC,MAAOQ,EAAQ6B,GACfF,IAAKE,EACLtC,QAAS,kBA7FC,SAACoB,GACnB,GAAmB,OAAfX,EAAQW,GAAa,CACvBX,EAAQW,GAAKb,EACbG,EAAWD,GAGXD,EADW,MAAXD,EAAyB,IAAe,KAExCW,KAsFqBqB,CAAYD,YC5FxBE,G,uLAZX,OACE,kBAAC,IAAMC,SAAP,KACE,kBAAC,EAAD,MACE,yBAAKvC,UAAU,aACb,8BACA,mC,GAPMwC,cCClBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.ff5aab17.chunk.js","sourcesContent":["import React from 'react';\n\nconst Button = ({ onClick, value }) => (\n  <div className='square' onClick={() => onClick()}>\n    <p>{value}</p>\n  </div>\n);\n\nexport default Button;\n","import React, { useState } from 'react';\nimport Button from './button';\nimport { useEffect } from 'react';\n\nconst Board = () => {\n  const [width, setWidth] = useState(3);\n  const [player, setPlayer] = useState('X');\n  const [squares, setSquares] = useState([]);\n  const [widths, setWidths] = useState([3, 4, 6, 10, 20]);\n  const [winner, setWinner] = useState('');\n\n  useEffect(() => {\n    const fields = Array(width * width).fill(null);\n    setSquares(fields);\n    setWinner('');\n  }, [width]);\n\n  const handleClick = (i) => {\n    if (squares[i] === null) {\n      squares[i] = player;\n      setSquares(squares);\n      var turn = player;\n      player === 'X' ? (turn = 'O') : (turn = 'X');\n      setPlayer(turn);\n      calculateWinner();\n    }\n  };\n\n  const calculateWinner = () => {\n    const makeLines = (direction) => {\n      while (direction.length > 0) {\n        chunk = direction.splice(0, width);\n        lines.push(chunk);\n      }\n    };\n\n    const lines = [];\n    var chunk;\n    var i;\n    var j;\n    var squared = width * width + 1;\n    var horizontals = [];\n\n    //Horizontals\n    for (i = 1; i < squared; i++) {\n      horizontals.push(i);\n    }\n    makeLines(horizontals);\n\n    //Verticals\n    for (i = 1; i < width + 1; i++) {\n      for (j = i; j < squared; j += width) {\n        horizontals.push(j);\n      }\n    }\n    makeLines(horizontals);\n\n    //Diagonals\n    for (i = 1; i < width + 1; i++) {\n      for (j = i; j < i * width - 1; j += width - 1) {\n        horizontals.push(j);\n      }\n    }\n    for (i = 1; i < width + 1; i++) {\n      chunk = horizontals.splice(0, i);\n      lines.push(chunk);\n    }\n\n    //Diagonals II\n    for (i = 1; i < width + 1; i++) {\n      for (j = i; j < squared - (width * i - width); j += width + 1) {\n        horizontals.push(j);\n      }\n    }\n    for (i = width; i > 0; i--) {\n      chunk = horizontals.splice(0, i);\n      lines.push(chunk);\n    }\n\n    var printing = '';\n    lines.forEach((line) => {\n      line.forEach((l) => (printing = printing + squares[l - 1]));\n      printing = printing + '-';\n    });\n\n    if (printing.includes('XXX')) {\n      setWinner('X wins!');\n    }\n    if (printing.includes('OOO')) {\n      setWinner('O wins!');\n    }\n  };\n\n  return (\n    <div>\n      <div className='button-large' onClick={() => setWidth(3)}>\n        New Game\n      </div>\n      {widths.map((width) => (\n        <p key={width} onClick={() => setWidth(width)} className='button'>\n          play {width}x{width}\n        </p>\n      ))}\n      <div className='status'>Next player {player}</div>\n      <div className='status'>{winner}</div>\n      <div className={`board-container width-${width}`}>\n        {squares.map((square, index) => (\n          <Button\n            value={squares[index]}\n            key={index}\n            onClick={() => handleClick(index)}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Board;\n","import React, { Component } from \"react\";\nimport Board from \"./components/board\";\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <Board/>\n          <div className=\"game-info\">\n            <div>{/* status */}</div>\n            <ol>{/* TODO */}</ol>\n          </div>\n      </React.Fragment>\n    );\n  };\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}